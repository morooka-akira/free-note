CHIP RAM64 {
    IN in[16], address[6], load;
    OUT out[16];
    PARTS:
    /* RAM8 * 8個で表現する */
    /* addressの上位3ビットは、RAM8のどれを使うかを指定する */
    DMux8Way(in=load, sel=address[3..5], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
    RAM8(in=in, address=address[0..2], load=load0, out=out0);
    RAM8(in=in, address=address[0..2], load=load1, out=out1);
    RAM8(in=in, address=address[0..2], load=load2, out=out2);
    RAM8(in=in, address=address[0..2], load=load3, out=out3);
    RAM8(in=in, address=address[0..2], load=load4, out=out4);
    RAM8(in=in, address=address[0..2], load=load5, out=out5);
    RAM8(in=in, address=address[0..2], load=load6, out=out6);
    RAM8(in=in, address=address[0..2], load=load7, out=out7);
    /* RAM8の出力結果の分岐 */
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[3..5], out=out);
}
